from sys import argv

from bot import Bot
from constants import HELP
from miscellaneous import (
    company_name,
    create_path_prefix,
    create_prompt,
    curr_date,
)
from myio import write_file
from scraper import get_page, parse
from settings import Settings


if len(argv) < 2:
    print(HELP)
    exit(0)

settings = Settings()

print('Realizando download da página.')
job_page = get_page(argv[1])

print('Extraindo informações da vaga de emprego.')
job_position, job_desc = parse(job_page)

print('Construindo prompt.')
prompt = create_prompt(job_position, job_desc, settings.cv_path)

# Get ready for conclusion.
prefix = create_path_prefix(
    settings.output_dir, company_name(argv[1]), job_position)
curr_date = curr_date()

if '-p' in argv:
    print('Salvando prompt.')
    write_file(f'{prefix} (prompt).md', prompt, curr_date)
    exit(0)

print('Comunicando o Gemini.')
bot = Bot(settings.model)
response = bot.send_prompt(prompt)
if response is None:
    print('Falha na comunicação; salvando prompt.')
    write_file(f'{prefix} (prompt - erro).md', prompt, curr_date)
else:
    print('Sucesso na comunicação; salvando prompt e resposta.')
    write_file(f'{prefix} (prompt).md', prompt, curr_date)
    write_file(
        f'{prefix} (response).md',
        response,
        f'Generated by "{settings.model}" model.\n{curr_date}')


